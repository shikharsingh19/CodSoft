import string
import random

def generate_password(length, options):
    """
    Generates a random password based on specified length and character types.
    """
    characters = ""
    if options['uppercase']:
        characters += string.ascii_uppercase
    if options['lowercase']:
        characters += string.ascii_lowercase
    if options['digits']:
        characters += string.digits
    if options['symbols']:
        characters += string.punctuation

    if not characters:
        return "Error: No character types selected."

    # This part picks random characters from our pool until the password is the right length.
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def get_yes_no_input(prompt):
    """
    Asks the user a yes/no question and returns True for 'y'/'yes', False otherwise.
    """
    return input(prompt).strip().lower().startswith('y')

def main():
    print("üîê Simple Password Generator")

    try:
        # Get desired password length
        length_str = input("Enter desired password length (e.g., 12): ")
        length = int(length_str)
        if length <= 0:
            raise ValueError("Length must be a positive number.")

        # Get character type preferences
        options = {
            'uppercase': get_yes_no_input("Include uppercase letters? (y/n): "),
            'lowercase': get_yes_no_input("Include lowercase letters? (y/n): "),
            'digits': get_yes_no_input("Include numbers? (y/n): "),
            'symbols': get_yes_no_input("Include special characters? (y/n): ")
        }

        # Generate and print the password
        password = generate_password(length, options)
        print(f"\n‚úÖ Generated Password:\n{password}")

    except ValueError as e:
        print(f"‚ùå Invalid input: {e}. Please enter a positive number for length.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")

if __name__ == "__main__":
    main()
